[{"C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\index.js":"1","C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\App.js":"2","C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\components\\UI\\Card.js":"3","C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\components\\Meals\\AvailableMeals.js":"4","C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\components\\UI\\Input.js":"5","C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\components\\Layout\\Header\\Header.js":"6","C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\components\\Layout\\Header\\HeaderCartButton.js":"7","C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\components\\Cart\\CartIcon.js":"8","C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\components\\Meals\\Meals.js":"9","C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\components\\Meals\\MealsSummary.js":"10","C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\components\\Meals\\MealItem\\MealItemForm.js":"11","C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\components\\Meals\\MealItem\\MealItem.js":"12","C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\components\\Cart\\Cart.js":"13","C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\components\\UI\\Modal.js":"14","C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\store\\CartProvider.js":"15","C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\store\\cart-context.js":"16","C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\components\\Cart\\CartItem.js":"17"},{"size":142,"mtime":1619427755362,"results":"18","hashOfConfig":"19"},{"size":661,"mtime":1619522126409,"results":"20","hashOfConfig":"19"},{"size":164,"mtime":1621435267274,"results":"21","hashOfConfig":"19"},{"size":1924,"mtime":1621514053150,"results":"22","hashOfConfig":"19"},{"size":328,"mtime":1621496848250,"results":"23","hashOfConfig":"19"},{"size":552,"mtime":1619710496150,"results":"24","hashOfConfig":"19"},{"size":1192,"mtime":1619710360899,"results":"25","hashOfConfig":"19"},{"size":501,"mtime":1619710496150,"results":"26","hashOfConfig":"19"},{"size":282,"mtime":1619512044100,"results":"27","hashOfConfig":"19"},{"size":548,"mtime":1621435278868,"results":"28","hashOfConfig":"19"},{"size":1155,"mtime":1621435543001,"results":"29","hashOfConfig":"19"},{"size":858,"mtime":1619710599723,"results":"30","hashOfConfig":"19"},{"size":4652,"mtime":1621510648918,"results":"31","hashOfConfig":"19"},{"size":773,"mtime":1621435272230,"results":"32","hashOfConfig":"19"},{"size":2484,"mtime":1621076845670,"results":"33","hashOfConfig":"19"},{"size":201,"mtime":1619524593227,"results":"34","hashOfConfig":"19"},{"size":627,"mtime":1619710496165,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1gtajca",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\index.js",[],["72","73"],"C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\App.js",[],"C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\components\\UI\\Card.js",[],"C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\components\\Meals\\AvailableMeals.js",[],"C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\components\\UI\\Input.js",[],"C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\components\\Layout\\Header\\Header.js",[],"C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\components\\Layout\\Header\\HeaderCartButton.js",[],"C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\components\\Cart\\CartIcon.js",[],"C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\components\\Meals\\Meals.js",[],"C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\components\\Meals\\MealsSummary.js",[],"C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\components\\Meals\\MealItem\\MealItemForm.js",[],"C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\components\\Meals\\MealItem\\MealItem.js",[],"C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\components\\Cart\\Cart.js",["74"],"import { useContext, useRef, useState } from \"react\";\r\nimport classes from \"./Cart.module.css\";\r\nimport Modal from \"../UI/Modal\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport CartItem from \"./CartItem\";\r\nimport Input from \"./../UI/Input\";\r\n\r\nconst Cart = ({ onHideCart }) => {\r\n  const nameRef = useRef(\"\");\r\n  const addressRef = useRef(\"\");\r\n\r\n  const cartCtx = useContext(CartContext);\r\n  const [checkoutFormIsOpen, setCheckoutFormIsOpen] = useState(false);\r\n\r\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartCtx.items.length > 0;\r\n\r\n  const cartItemRemoveHandler = (id) => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n  const cartItemAddHandler = (item) => {\r\n    cartCtx.addItem({ ...item, amount: 1 });\r\n  };\r\n\r\n  const cartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {cartCtx.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          {...item}\r\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n          onAdd={cartItemAddHandler.bind(null, item)}\r\n        >\r\n          {item.name}\r\n        </CartItem>\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  const toggleCheckoutForm = () => {\r\n    setCheckoutFormIsOpen((prevState) => {\r\n      return !prevState;\r\n    });\r\n  };\r\n\r\n  const addCheckoutHandler = async (checkout) => {\r\n    const response = await fetch(\r\n      \"https://react-http-f8322-default-rtdb.europe-west1.firebasedatabase.app/checkout.json\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify(checkout),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    // const data = await response.json();\r\n    // console.log(\"data:\", data);\r\n  };\r\n\r\n  const [enteredName, setEnteredName] = useState(\"\");\r\n  const [enteredNameIsTouched, setEnteredNameIsTouched] = useState(false);\r\n\r\n  const [enteredAddress, setEnteredAddress] = useState(\"\");\r\n  const [enteredAddressIsTouched, setEnteredAddressIsTouched] = useState(false);\r\n\r\n  const enteredNameIsValid = enteredName.trim() !== \"\";\r\n  const enteredAddressIsValid = enteredAddress.trim() !== \"\";\r\n\r\n  const nameHasError = !enteredNameIsValid && enteredNameIsTouched;\r\n  const addressHasError = !enteredAddressIsValid && enteredAddressIsTouched;\r\n\r\n  const formIsValid = enteredNameIsValid && enteredAddressIsValid;\r\n\r\n  const nameInputChangeHandler = (event) => {\r\n    setEnteredName(event.target.value);\r\n  };\r\n\r\n  const addressInputChangeHandler = (event) => {\r\n    setEnteredAddress(event.target.value);\r\n  };\r\n\r\n  const nameInputBlurHandler = () => {\r\n    setEnteredNameIsTouched(true);\r\n  };\r\n\r\n  const addressInputBlurHandler = () => {\r\n    setEnteredAddressIsTouched(true);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const checkout = {\r\n      name: nameRef.current.value,\r\n      address: addressRef.current.value,\r\n    };\r\n    addCheckoutHandler(checkout);\r\n  };\r\n\r\n  return (\r\n    <Modal title=\"Cart\" onClick={onHideCart}>\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        <span>Total amount</span>\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button className={classes[\"button--alt\"]} onClick={onHideCart}>\r\n          Close\r\n        </button>\r\n        {hasItems && (\r\n          <button className={classes.button} onClick={toggleCheckoutForm}>\r\n            Checkout\r\n          </button>\r\n        )}\r\n      </div>\r\n      {checkoutFormIsOpen && (\r\n        <div>\r\n          <h2>Checkout</h2>\r\n          <form onSubmit={submitHandler}>\r\n            <Input\r\n              label=\"Name\"\r\n              ref={nameRef}\r\n              input={{\r\n                id: \"name\",\r\n                type: \"text\",\r\n                value: enteredName,\r\n                onChange: nameInputChangeHandler,\r\n                onBlur: nameInputBlurHandler,\r\n              }}\r\n            />\r\n            {nameHasError && <p className=\"error-text\">Name cannot be empty</p>}\r\n            <Input\r\n              label=\"Address\"\r\n              ref={addressRef}\r\n              input={{\r\n                id: \"address\",\r\n                type: \"text\",\r\n                value: enteredAddress,\r\n                onChange: addressInputChangeHandler,\r\n                onBlur: addressInputBlurHandler,\r\n              }}\r\n            />\r\n            {addressHasError && <p className=\"error-text\">Address cannot be empty</p>}\r\n            <div className={classes.actions}>\r\n              <button className={classes.button} disabled={!formIsValid}>Order</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\components\\UI\\Modal.js",[],"C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\store\\CartProvider.js",[],"C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\store\\cart-context.js",[],"C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-5\\src\\components\\Cart\\CartItem.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":47,"column":11,"nodeType":"81","messageId":"82","endLine":47,"endColumn":19},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]